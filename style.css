/* Another way to import fonts directly into css */
@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@300&display=swap");

/* you can declare variables  using ex. var() for multi-use purposes to be used anywhere with :root at the top */
:root {
  --success-color: #2eec71;
  --error-color: #e74c3c;
}

* {
  box-sizing: border-box;
}

body {
  background-color: #f9fafb;
  font-family: "Roboto", sans-serif;
  display: flex;
  /* align-itens and justify-content will align horizontally. */
  align-items: center;
  justify-content: center;
  /* min-height 100vh will specifically center form vertically.(viewport height) - 100 lines top/down */
  min-height: 100vh;
  margin: 0;
}

/* container wraps around the form */
.container {
  background-color: #fff;
  /* border-radius is for rounded corners */
  border-radius: 5px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
  width: 400px;
}

.form {
  padding: 30px 40px;
}

h2 {
  text-align: center;
  margin: 0 0 20px;
}

.form-control {
  margin-bottom: 10px;
  padding-bottom: 20px;
  position: relative;
}

.form-control label {
  color: #777;
  /* labels are displayed in-line by default. display block will put then im their own line, and knock next element down. */
  display: block;
  margin-bottom: 5px;
}

.form-control input {
  border: 2px solid #f0f0f0;
  border-radius: 5px;
  display: block;
  /* width is set as a percentage to it's container. */
  width: 100%;
  /* padding size here is pertaining to the the space between text/border inside input box. */
  padding: 10px;
  font-size: 14px;
  margin-bottom: 5px;
}

.form-control input:focus {
  /*  targets input box outline when clicked */
  outline: 0;
  border-color: #777;
}

/* the follow from control success and error are to change the color of the input for success and error entries. */
.form-control.success input {
  border-color: var(--success-color);
}

.form-control.error input {
  border-color: var(--error-color);
}

/* error messages */

.form-control small {
  color: var(--error-color);
  /* small error message position is relative to form control position above. The form control needed to be relative in order to use absolute here.*/
  position: absolute;
  bottom: 0;
  left: 0;
  /* visibility of error message is set to hidden/invisible until triggered */
  visibility: hidden;
}

.form-control.error small {
  visibility: visible;
}

.form button {
  cursor: pointer;
  background-color: #3498db;
  border: 2px solid #3498db;
  color: #fff;
  font-size: 18px;
  display: block;
  width: 100%;
  padding: 10px;
  margin-top: 10px;
  border-radius: 5px;
}
